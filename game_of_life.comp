#version 450
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) buffer AutoIn {
    uint data[];
} auto_in;

layout(set = 0, binding = 1) buffer AutoOut {
    uint data[];
} auto_out;

layout(push_constant) uniform Dim {
	uint nb_rows;
	uint nb_cols;
} dim;

ivec2 neighbors[8] = {
    ivec2(0, -1), ivec2(1, -1),
    ivec2(1, 0), ivec2(1, 1),
    ivec2(0, 1), ivec2(-1, 1),
    ivec2(-1, 0), ivec2(-1, -1),
};

void main() {

    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;
    uint idx = x + y * dim.nb_cols;

    uint current_state = auto_in.data[idx];
    uint new_state = 0;

    if (x >= 1 && x < dim.nb_cols - 1 && y >= 1 && y < dim.nb_rows - 1) {
        uint cnt_alive = 0;
        for (uint i = 0 ; i < 8 ; i++) {
            ivec2 nbor = neighbors[i];
            uint nx = x + nbor.x;
            uint ny = y + nbor.y;
            if (auto_in.data[nx + ny * dim.nb_cols] == 1) {
               cnt_alive++;
            }
        }
        new_state = uint((current_state == 0 && cnt_alive == 3) || (current_state == 1 && (cnt_alive == 2 || cnt_alive == 3)));
    } 

    auto_out.data[idx] = new_state;     
}
